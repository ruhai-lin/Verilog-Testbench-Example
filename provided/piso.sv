/* Generated by Yosys 0.39 (git sha1 00338082b, aarch64-apple-darwin21.4-clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* top =  1  *)
(* hdlname = "bsg_parallel_in_serial_out" *)
(* src = "bsg_parallel_in_serial_out.sv:19.8-19.34" *)
module piso(clk_i, reset_i, valid_i, ready_and_o, valid_o, ready_i, data_o, \data_i[1] , \data_i[0] );
  reg _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  (* src = "bsg_parallel_in_serial_out.sv:27.38-27.43" *)
  input clk_i;
  wire clk_i;
  (* src = "bsg_parallel_in_serial_out.sv:32.38-32.44" *)
  input [24:0] \data_i[0] ;
  wire [24:0] \data_i[0] ;
  (* src = "bsg_parallel_in_serial_out.sv:32.38-32.44" *)
  input [24:0] \data_i[1] ;
  wire [24:0] \data_i[1] ;
  (* src = "bsg_parallel_in_serial_out.sv:45.36-45.43" *)
  wire [24:0] \data_li[0] ;
  (* src = "bsg_parallel_in_serial_out.sv:45.36-45.43" *)
  wire [24:0] \data_li[1] ;
  (* src = "bsg_parallel_in_serial_out.sv:37.38-37.44" *)
  output [24:0] data_o;
  wire [24:0] data_o;
  (* src = "bsg_parallel_in_serial_out.sv:68.22-68.35" *)
  wire fifo0_yumi_li;
  (* src = "bsg_parallel_in_serial_out.sv:69.36-69.48" *)
  wire [24:0] \fifo_data_lo[0] ;
  (* src = "bsg_parallel_in_serial_out.sv:68.11-68.20" *)
  wire fifo_v_lo;
  (* hdlname = "piso.data_o_mux data_i[0]" *)
  (* src = "bsg_mux.sv:9.36-9.42" *)
  wire [24:0] \piso.data_o_mux.data_i[0] ;
  (* hdlname = "piso.data_o_mux data_o" *)
  (* src = "bsg_mux.sv:11.27-11.33" *)
  wire [24:0] \piso.data_o_mux.data_o ;
  (* hdlname = "piso.data_o_mux sel_i" *)
  (* src = "bsg_mux.sv:10.28-10.33" *)
  wire \piso.data_o_mux.sel_i ;
  (* hdlname = "piso.fifo1 clk_i" *)
  (* src = "bsg_one_fifo.sv:21.11-21.16" *)
  wire \piso.fifo1.clk_i ;
  (* hdlname = "piso.fifo1 data_i" *)
  (* src = "bsg_one_fifo.sv:26.27-26.33" *)
  wire [24:0] \piso.fifo1.data_i ;
  (* hdlname = "piso.fifo1 data_o" *)
  (* src = "bsg_one_fifo.sv:31.27-31.33" *)
  wire [24:0] \piso.fifo1.data_o ;
  (* hdlname = "piso.fifo1 dff clk_i" *)
  (* src = "bsg_dff_en.sv:12.9-12.14" *)
  wire \piso.fifo1.dff.clk_i ;
  (* hdlname = "piso.fifo1 dff data_i" *)
  (* src = "bsg_dff_en.sv:13.24-13.30" *)
  wire [24:0] \piso.fifo1.dff.data_i ;
  (* hdlname = "piso.fifo1 dff data_o" *)
  (* src = "bsg_dff_en.sv:15.31-15.37" *)
  wire [24:0] \piso.fifo1.dff.data_o ;
  (* hdlname = "piso.fifo1 dff data_r" *)
  (* src = "bsg_dff_en.sv:18.23-18.29" *)
  reg [24:0] \piso.fifo1.dff.data_r ;
  (* hdlname = "piso.fifo1 dff en_i" *)
  (* src = "bsg_dff_en.sv:14.10-14.14" *)
  wire \piso.fifo1.dff.en_i ;
  (* hdlname = "piso.fifo1 dff_full clk_i" *)
  (* src = "bsg_dff_reset.sv:4.13-4.18" *)
  wire \piso.fifo1.dff_full.clk_i ;
  (* hdlname = "piso.fifo1 dff_full data_i" *)
  (* src = "bsg_dff_reset.sv:6.27-6.33" *)
  wire \piso.fifo1.dff_full.data_i ;
  (* hdlname = "piso.fifo1 dff_full data_o" *)
  (* src = "bsg_dff_reset.sv:7.27-7.33" *)
  wire \piso.fifo1.dff_full.data_o ;
  (* hdlname = "piso.fifo1 dff_full data_r" *)
  (* src = "bsg_dff_reset.sv:10.22-10.28" *)
  reg \piso.fifo1.dff_full.data_r ;
  (* hdlname = "piso.fifo1 dff_full reset_i" *)
  (* src = "bsg_dff_reset.sv:5.12-5.19" *)
  wire \piso.fifo1.dff_full.reset_i ;
  (* hdlname = "piso.fifo1 full_r" *)
  (* src = "bsg_one_fifo.sv:35.21-35.27" *)
  wire \piso.fifo1.full_r ;
  (* hdlname = "piso.fifo1 reset_i" *)
  (* src = "bsg_one_fifo.sv:22.13-22.20" *)
  wire \piso.fifo1.reset_i ;
  (* hdlname = "piso.fifo1 v_o" *)
  (* src = "bsg_one_fifo.sv:30.27-30.30" *)
  wire \piso.fifo1.v_o ;
  (* hdlname = "piso.shift_ctr clear_i" *)
  (* src = "bsg_counter_clear_up.sv:19.13-19.20" *)
  wire \piso.shift_ctr.clear_i ;
  (* hdlname = "piso.shift_ctr clk_i" *)
  (* src = "bsg_counter_clear_up.sv:16.12-16.17" *)
  wire \piso.shift_ctr.clk_i ;
  (* hdlname = "piso.shift_ctr count_o" *)
  (* src = "bsg_counter_clear_up.sv:23.39-23.46" *)
  reg \piso.shift_ctr.count_o ;
  (* hdlname = "piso.shift_ctr reset_i" *)
  (* src = "bsg_counter_clear_up.sv:17.13-17.20" *)
  wire \piso.shift_ctr.reset_i ;
  (* src = "bsg_parallel_in_serial_out.sv:158.29-158.40" *)
  wire \piso.shift_ctr_r ;
  (* src = "bsg_parallel_in_serial_out.sv:33.38-33.49" *)
  output ready_and_o;
  wire ready_and_o;
  (* src = "bsg_parallel_in_serial_out.sv:38.38-38.45" *)
  input ready_i;
  wire ready_i;
  (* src = "bsg_parallel_in_serial_out.sv:28.38-28.45" *)
  input reset_i;
  wire reset_i;
  (* hdlname = "two_fifo.fifo0 clk_i" *)
  (* src = "bsg_two_fifo.sv:36.11-36.16" *)
  wire \two_fifo.fifo0.clk_i ;
  (* hdlname = "two_fifo.fifo0 data_i" *)
  (* src = "bsg_two_fifo.sv:41.27-41.33" *)
  wire [24:0] \two_fifo.fifo0.data_i ;
  (* hdlname = "two_fifo.fifo0 deq_i" *)
  (* src = "bsg_two_fifo.sv:50.9-50.14" *)
  wire \two_fifo.fifo0.deq_i ;
  (* hdlname = "two_fifo.fifo0 empty_r" *)
  (* src = "bsg_two_fifo.sv:54.27-54.34" *)
  reg \two_fifo.fifo0.empty_r ;
  (* hdlname = "two_fifo.fifo0 full_r" *)
  (* src = "bsg_two_fifo.sv:54.36-54.42" *)
  reg \two_fifo.fifo0.full_r ;
  (* hdlname = "two_fifo.fifo0 head_r" *)
  (* src = "bsg_two_fifo.sv:53.27-53.33" *)
  reg \two_fifo.fifo0.head_r ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w r_addr_i" *)
  (* src = "bsg_mem_1r1w.sv:25.34-25.42" *)
  wire \two_fifo.fifo0.mem_1r1w.r_addr_i ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w r_v_i" *)
  (* src = "bsg_mem_1r1w.sv:24.34-24.39" *)
  wire \two_fifo.fifo0.mem_1r1w.r_v_i ;
  reg [24:0] \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] ;
  reg [24:0] \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w synth nz.r_addr_li" *)
  (* src = "bsg_mem_1r1w_synth.sv:45.28-45.37" *)
  wire \two_fifo.fifo0.mem_1r1w.synth.nz.r_addr_li ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w synth nz.w_addr_li" *)
  (* src = "bsg_mem_1r1w_synth.sv:46.28-46.37" *)
  wire \two_fifo.fifo0.mem_1r1w.synth.nz.w_addr_li ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w synth r_addr_i" *)
  (* src = "bsg_mem_1r1w_synth.sv:27.31-27.39" *)
  wire \two_fifo.fifo0.mem_1r1w.synth.r_addr_i ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w synth r_v_i" *)
  (* src = "bsg_mem_1r1w_synth.sv:26.10-26.15" *)
  wire \two_fifo.fifo0.mem_1r1w.synth.r_v_i ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w synth unused0" *)
  (* src = "bsg_mem_1r1w_synth.sv:32.8-32.15" *)
  wire \two_fifo.fifo0.mem_1r1w.synth.unused0 ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w synth unused1" *)
  (* src = "bsg_mem_1r1w_synth.sv:33.8-33.15" *)
  wire \two_fifo.fifo0.mem_1r1w.synth.unused1 ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w synth w_addr_i" *)
  (* src = "bsg_mem_1r1w_synth.sv:22.30-22.38" *)
  wire \two_fifo.fifo0.mem_1r1w.synth.w_addr_i ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w synth w_clk_i" *)
  (* src = "bsg_mem_1r1w_synth.sv:18.9-18.16" *)
  wire \two_fifo.fifo0.mem_1r1w.synth.w_clk_i ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w synth w_data_i" *)
  (* src = "bsg_mem_1r1w_synth.sv:23.42-23.50" *)
  wire [24:0] \two_fifo.fifo0.mem_1r1w.synth.w_data_i ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w synth w_reset_i" *)
  (* src = "bsg_mem_1r1w_synth.sv:19.10-19.19" *)
  wire \two_fifo.fifo0.mem_1r1w.synth.w_reset_i ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w w_addr_i" *)
  (* src = "bsg_mem_1r1w.sv:20.33-20.41" *)
  wire \two_fifo.fifo0.mem_1r1w.w_addr_i ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w w_clk_i" *)
  (* src = "bsg_mem_1r1w.sv:16.13-16.20" *)
  wire \two_fifo.fifo0.mem_1r1w.w_clk_i ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w w_data_i" *)
  (* src = "bsg_mem_1r1w.sv:21.51-21.59" *)
  wire [24:0] \two_fifo.fifo0.mem_1r1w.w_data_i ;
  (* hdlname = "two_fifo.fifo0 mem_1r1w w_reset_i" *)
  (* src = "bsg_mem_1r1w.sv:17.13-17.22" *)
  wire \two_fifo.fifo0.mem_1r1w.w_reset_i ;
  (* hdlname = "two_fifo.fifo0 reset_i" *)
  (* src = "bsg_two_fifo.sv:37.13-37.20" *)
  wire \two_fifo.fifo0.reset_i ;
  (* hdlname = "two_fifo.fifo0 tail_r" *)
  (* src = "bsg_two_fifo.sv:53.36-53.42" *)
  reg \two_fifo.fifo0.tail_r ;
  (* hdlname = "two_fifo.fifo0 v_o" *)
  (* src = "bsg_two_fifo.sv:45.27-45.30" *)
  wire \two_fifo.fifo0.v_o ;
  (* hdlname = "two_fifo.fifo0 yumi_i" *)
  (* src = "bsg_two_fifo.sv:47.27-47.33" *)
  wire \two_fifo.fifo0.yumi_i ;
  (* src = "bsg_parallel_in_serial_out.sv:31.38-31.45" *)
  input valid_i;
  wire valid_i;
  (* src = "bsg_parallel_in_serial_out.sv:36.38-36.45" *)
  output valid_o;
  wire valid_o;
  assign _010_ = ~\piso.shift_ctr.count_o ;
  assign _011_ = \two_fifo.fifo0.empty_r  | ~(ready_i);
  assign _012_ = _011_ | _010_;
  assign fifo0_yumi_li = ~_012_;
  assign _001_ = ~(_012_ & _011_);
  assign _005_ = ~\two_fifo.fifo0.head_r ;
  assign _003_ = _012_ ^ _005_;
  assign _013_ = ~\piso.fifo1.dff_full.data_r ;
  assign _014_ = \two_fifo.fifo0.full_r  | \piso.fifo1.dff_full.data_r ;
  assign _015_ = _014_ | ~(valid_i);
  assign _016_ = ~_015_;
  assign _017_ = _011_ | \piso.shift_ctr.count_o ;
  assign \piso.fifo1.dff_full.data_i  = \piso.fifo1.dff_full.data_r  ? _017_ : _016_;
  assign _018_ = _010_ & ~(_011_);
  assign _004_ = _012_ ? _010_ : _018_;
  assign _019_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [0] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [0];
  assign data_o[0] = \piso.shift_ctr.count_o  ? _019_ : \piso.fifo1.dff.data_r [0];
  assign _020_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [1] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [1];
  assign data_o[1] = \piso.shift_ctr.count_o  ? _020_ : \piso.fifo1.dff.data_r [1];
  assign _021_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [2] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [2];
  assign data_o[2] = \piso.shift_ctr.count_o  ? _021_ : \piso.fifo1.dff.data_r [2];
  assign _022_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [3] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [3];
  assign data_o[3] = \piso.shift_ctr.count_o  ? _022_ : \piso.fifo1.dff.data_r [3];
  assign _023_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [4] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [4];
  assign data_o[4] = \piso.shift_ctr.count_o  ? _023_ : \piso.fifo1.dff.data_r [4];
  assign _024_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [5] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [5];
  assign data_o[5] = \piso.shift_ctr.count_o  ? _024_ : \piso.fifo1.dff.data_r [5];
  assign _025_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [6] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [6];
  assign data_o[6] = \piso.shift_ctr.count_o  ? _025_ : \piso.fifo1.dff.data_r [6];
  assign _026_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [7] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [7];
  assign data_o[7] = \piso.shift_ctr.count_o  ? _026_ : \piso.fifo1.dff.data_r [7];
  assign _027_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [8] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [8];
  assign data_o[8] = \piso.shift_ctr.count_o  ? _027_ : \piso.fifo1.dff.data_r [8];
  assign _028_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [9] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [9];
  assign data_o[9] = \piso.shift_ctr.count_o  ? _028_ : \piso.fifo1.dff.data_r [9];
  assign _029_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [10] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [10];
  assign data_o[10] = \piso.shift_ctr.count_o  ? _029_ : \piso.fifo1.dff.data_r [10];
  assign _030_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [11] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [11];
  assign data_o[11] = \piso.shift_ctr.count_o  ? _030_ : \piso.fifo1.dff.data_r [11];
  assign _031_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [12] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [12];
  assign data_o[12] = \piso.shift_ctr.count_o  ? _031_ : \piso.fifo1.dff.data_r [12];
  assign _032_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [13] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [13];
  assign data_o[13] = \piso.shift_ctr.count_o  ? _032_ : \piso.fifo1.dff.data_r [13];
  assign _033_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [14] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [14];
  assign data_o[14] = \piso.shift_ctr.count_o  ? _033_ : \piso.fifo1.dff.data_r [14];
  assign _034_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [15] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [15];
  assign data_o[15] = \piso.shift_ctr.count_o  ? _034_ : \piso.fifo1.dff.data_r [15];
  assign _035_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [16] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [16];
  assign data_o[16] = \piso.shift_ctr.count_o  ? _035_ : \piso.fifo1.dff.data_r [16];
  assign _036_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [17] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [17];
  assign data_o[17] = \piso.shift_ctr.count_o  ? _036_ : \piso.fifo1.dff.data_r [17];
  assign _037_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [18] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [18];
  assign data_o[18] = \piso.shift_ctr.count_o  ? _037_ : \piso.fifo1.dff.data_r [18];
  assign _038_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [19] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [19];
  assign data_o[19] = \piso.shift_ctr.count_o  ? _038_ : \piso.fifo1.dff.data_r [19];
  assign _039_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [20] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [20];
  assign data_o[20] = \piso.shift_ctr.count_o  ? _039_ : \piso.fifo1.dff.data_r [20];
  assign _040_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [21] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [21];
  assign data_o[21] = \piso.shift_ctr.count_o  ? _040_ : \piso.fifo1.dff.data_r [21];
  assign _041_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [22] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [22];
  assign data_o[22] = \piso.shift_ctr.count_o  ? _041_ : \piso.fifo1.dff.data_r [22];
  assign _042_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [23] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [23];
  assign data_o[23] = \piso.shift_ctr.count_o  ? _042_ : \piso.fifo1.dff.data_r [23];
  assign _043_ = _000_ ? \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [24] : \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [24];
  assign data_o[24] = \piso.shift_ctr.count_o  ? _043_ : \piso.fifo1.dff.data_r [24];
  assign _044_ = _015_ | \two_fifo.fifo0.full_r ;
  assign _002_ = ~\two_fifo.fifo0.tail_r ;
  assign valid_o = ~\two_fifo.fifo0.empty_r ;
  assign ready_and_o = ~_014_;
  assign _008_ = _002_ & ~(_044_);
  assign _045_ = _044_ | \two_fifo.fifo0.empty_r ;
  assign _046_ = ~(_045_ | fifo0_yumi_li);
  assign _047_ = _012_ & \two_fifo.fifo0.full_r ;
  assign _007_ = _047_ | _046_;
  assign _048_ = _044_ & ~(valid_o);
  assign _049_ = _012_ | \two_fifo.fifo0.full_r ;
  assign _050_ = _044_ & ~(_049_);
  assign _006_ = _050_ | _048_;
  assign _009_ = \two_fifo.fifo0.tail_r  & ~(_044_);
  assign \piso.fifo1.dff.en_i  = _013_ & ~(_015_);
  (* src = "bsg_two_fifo.sv:78.14-106.9" *)
  always @(posedge clk_i)
    if (reset_i) \two_fifo.fifo0.full_r  <= 1'h0;
    else \two_fifo.fifo0.full_r  <= _007_;
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [0] <= \data_i[1] [0];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [1] <= \data_i[1] [1];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [2] <= \data_i[1] [2];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [3] <= \data_i[1] [3];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [4] <= \data_i[1] [4];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [5] <= \data_i[1] [5];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [6] <= \data_i[1] [6];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [7] <= \data_i[1] [7];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [8] <= \data_i[1] [8];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [9] <= \data_i[1] [9];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [10] <= \data_i[1] [10];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [11] <= \data_i[1] [11];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [12] <= \data_i[1] [12];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [13] <= \data_i[1] [13];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [14] <= \data_i[1] [14];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [15] <= \data_i[1] [15];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [16] <= \data_i[1] [16];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [17] <= \data_i[1] [17];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [18] <= \data_i[1] [18];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [19] <= \data_i[1] [19];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [20] <= \data_i[1] [20];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [21] <= \data_i[1] [21];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [22] <= \data_i[1] [22];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [23] <= \data_i[1] [23];
  always @(posedge clk_i)
    if (_008_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[0] [24] <= \data_i[1] [24];
  (* src = "bsg_two_fifo.sv:78.14-106.9" *)
  always @(posedge clk_i)
    if (reset_i) \two_fifo.fifo0.empty_r  <= 1'h1;
    else \two_fifo.fifo0.empty_r  <= _006_;
  (* src = "bsg_dff_reset.sv:14.11-20.9" *)
  always @(posedge clk_i)
    if (reset_i) \piso.fifo1.dff_full.data_r  <= 1'h0;
    else \piso.fifo1.dff_full.data_r  <= \piso.fifo1.dff_full.data_i ;
  (* src = "bsg_two_fifo.sv:78.14-106.9" *)
  always @(posedge clk_i)
    if (reset_i) \two_fifo.fifo0.head_r  <= 1'h0;
    else if (!_012_) \two_fifo.fifo0.head_r  <= _005_;
  (* src = "bsg_two_fifo.sv:78.14-106.9" *)
  always @(posedge clk_i)
    if (reset_i) \two_fifo.fifo0.tail_r  <= 1'h0;
    else if (!_044_) \two_fifo.fifo0.tail_r  <= _002_;
  always @(posedge clk_i)
    if (reset_i) _000_ <= 1'h0;
    else _000_ <= _003_;
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [0] <= \data_i[0] [0];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [1] <= \data_i[0] [1];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [2] <= \data_i[0] [2];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [3] <= \data_i[0] [3];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [4] <= \data_i[0] [4];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [5] <= \data_i[0] [5];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [6] <= \data_i[0] [6];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [7] <= \data_i[0] [7];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [8] <= \data_i[0] [8];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [9] <= \data_i[0] [9];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [10] <= \data_i[0] [10];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [11] <= \data_i[0] [11];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [12] <= \data_i[0] [12];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [13] <= \data_i[0] [13];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [14] <= \data_i[0] [14];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [15] <= \data_i[0] [15];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [16] <= \data_i[0] [16];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [17] <= \data_i[0] [17];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [18] <= \data_i[0] [18];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [19] <= \data_i[0] [19];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [20] <= \data_i[0] [20];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [21] <= \data_i[0] [21];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [22] <= \data_i[0] [22];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [23] <= \data_i[0] [23];
  (* src = "bsg_dff_en.sv:22.13-26.6" *)
  always @(posedge clk_i)
    if (\piso.fifo1.dff.en_i ) \piso.fifo1.dff.data_r [24] <= \data_i[0] [24];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [0] <= \data_i[1] [0];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [1] <= \data_i[1] [1];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [2] <= \data_i[1] [2];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [3] <= \data_i[1] [3];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [4] <= \data_i[1] [4];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [5] <= \data_i[1] [5];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [6] <= \data_i[1] [6];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [7] <= \data_i[1] [7];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [8] <= \data_i[1] [8];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [9] <= \data_i[1] [9];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [10] <= \data_i[1] [10];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [11] <= \data_i[1] [11];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [12] <= \data_i[1] [12];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [13] <= \data_i[1] [13];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [14] <= \data_i[1] [14];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [15] <= \data_i[1] [15];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [16] <= \data_i[1] [16];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [17] <= \data_i[1] [17];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [18] <= \data_i[1] [18];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [19] <= \data_i[1] [19];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [20] <= \data_i[1] [20];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [21] <= \data_i[1] [21];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [22] <= \data_i[1] [22];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [23] <= \data_i[1] [23];
  always @(posedge clk_i)
    if (_009_) \two_fifo.fifo0.mem_1r1w.synth.nz.mem[1] [24] <= \data_i[1] [24];
  (* src = "bsg_counter_clear_up.sv:30.14-43.9" *)
  always @(posedge clk_i)
    if (reset_i) \piso.shift_ctr.count_o  <= 1'h0;
    else if (_001_) \piso.shift_ctr.count_o  <= _004_;
  assign \data_li[0]  = \data_i[0] ;
  assign \data_li[1]  = \data_i[1] ;
  assign \fifo_data_lo[0]  = \piso.fifo1.dff.data_r ;
  assign fifo_v_lo = valid_o;
  assign \piso.data_o_mux.data_i[0]  = \piso.fifo1.dff.data_r ;
  assign \piso.data_o_mux.data_o  = data_o;
  assign \piso.data_o_mux.sel_i  = \piso.shift_ctr.count_o ;
  assign \piso.fifo1.clk_i  = clk_i;
  assign \piso.fifo1.data_i  = \data_i[0] ;
  assign \piso.fifo1.data_o  = \piso.fifo1.dff.data_r ;
  assign \piso.fifo1.dff.clk_i  = clk_i;
  assign \piso.fifo1.dff.data_i  = \data_i[0] ;
  assign \piso.fifo1.dff.data_o  = \piso.fifo1.dff.data_r ;
  assign \piso.fifo1.dff_full.clk_i  = clk_i;
  assign \piso.fifo1.dff_full.data_o  = \piso.fifo1.dff_full.data_r ;
  assign \piso.fifo1.dff_full.reset_i  = reset_i;
  assign \piso.fifo1.full_r  = \piso.fifo1.dff_full.data_r ;
  assign \piso.fifo1.reset_i  = reset_i;
  assign \piso.fifo1.v_o  = \piso.fifo1.dff_full.data_r ;
  assign \piso.shift_ctr.clear_i  = fifo0_yumi_li;
  assign \piso.shift_ctr.clk_i  = clk_i;
  assign \piso.shift_ctr.reset_i  = reset_i;
  assign \piso.shift_ctr_r  = \piso.shift_ctr.count_o ;
  assign \two_fifo.fifo0.clk_i  = clk_i;
  assign \two_fifo.fifo0.data_i  = \data_i[1] ;
  assign \two_fifo.fifo0.deq_i  = fifo0_yumi_li;
  assign \two_fifo.fifo0.mem_1r1w.r_addr_i  = \two_fifo.fifo0.head_r ;
  assign \two_fifo.fifo0.mem_1r1w.r_v_i  = valid_o;
  assign \two_fifo.fifo0.mem_1r1w.synth.nz.r_addr_li  = \two_fifo.fifo0.head_r ;
  assign \two_fifo.fifo0.mem_1r1w.synth.nz.w_addr_li  = \two_fifo.fifo0.tail_r ;
  assign \two_fifo.fifo0.mem_1r1w.synth.r_addr_i  = \two_fifo.fifo0.head_r ;
  assign \two_fifo.fifo0.mem_1r1w.synth.r_v_i  = valid_o;
  assign \two_fifo.fifo0.mem_1r1w.synth.unused0  = reset_i;
  assign \two_fifo.fifo0.mem_1r1w.synth.unused1  = valid_o;
  assign \two_fifo.fifo0.mem_1r1w.synth.w_addr_i  = \two_fifo.fifo0.tail_r ;
  assign \two_fifo.fifo0.mem_1r1w.synth.w_clk_i  = clk_i;
  assign \two_fifo.fifo0.mem_1r1w.synth.w_data_i  = \data_i[1] ;
  assign \two_fifo.fifo0.mem_1r1w.synth.w_reset_i  = reset_i;
  assign \two_fifo.fifo0.mem_1r1w.w_addr_i  = \two_fifo.fifo0.tail_r ;
  assign \two_fifo.fifo0.mem_1r1w.w_clk_i  = clk_i;
  assign \two_fifo.fifo0.mem_1r1w.w_data_i  = \data_i[1] ;
  assign \two_fifo.fifo0.mem_1r1w.w_reset_i  = reset_i;
  assign \two_fifo.fifo0.reset_i  = reset_i;
  assign \two_fifo.fifo0.v_o  = valid_o;
  assign \two_fifo.fifo0.yumi_i  = fifo0_yumi_li;
endmodule
